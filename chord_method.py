import math


def f(x):
    """
    Исходная функция f(x) = x^2 - 2x + e^(-x).
    """
    return x ** 2 - 2 * x + math.e ** (-x)


def fprime(x):
    """
    Первая производная f'(x) = 2x - 2 - e^(-x).
    Именно её корень ищем методом хорд.
    """
    return 2 * x - 2 - math.e ** (-x)


def chord_method(x0, x1, eps=0.00000005, max_iter=50):
    """
    Поиск корня уравнения f'(x) = 0 методом хорд (секущих).

    Параметры:
      x0, x1 : float
          Начальные приближения (концы отрезка, где f'(x0) и f'(x1) имеют разные знаки).
      eps : float
          Допустимая погрешность (по |x_{n+1} - x_n|).
      max_iter : int
          Максимальное число итераций.

    Возвращает:
      (x_star, n_iter) : кортеж
          x_star  - найденное приближение к корню f'(x)=0
          n_iter  - число фактически выполненных итераций
    """
    print(f"Начальные точки: x0 = {x0:.6f}, f'(x0)={fprime(x0):.6f};"
          f" x1={x1:.6f}, f'(x1)={fprime(x1):.6f}")

    # Убедимся, что действительно на концах разные знаки (хотя бы в классическом варианте).
    if fprime(x0) * fprime(x1) > 0:
        print("Предупреждение: f'(x0) и f'(x1) не имеют разных знаков.")
        # Можно продолжить, но результат не гарантируется.

    iteration = 0
    while iteration < max_iter:
        iteration += 1

        f0 = fprime(x0)
        f1 = fprime(x1)

        if abs(f1 - f0) < 1e-14:
            print("Слишком близкие значения f'(x0) и f'(x1), деление на 0 возможно.")
            break

        # Формула метода хорд:
        x2 = x1 - f1 * (x1 - x0) / (f1 - f0)
        f2 = fprime(x2)

        print(f"\nИтерация {iteration}:")
        print(f"  x0={x0:.6f},  x1={x1:.6f},  x2={x2:.6f}")
        print(f"  f'(x0)={f0:.6f},  f'(x1)={f1:.6f},  f'(x2)={f2:.6f}")

        # Проверяем сходимость по x:
        if abs(x2 - x1) < eps:
            print(f"Достигнута требуемая точность по x: |x2 - x1| < {eps}")
            print(abs(x2 - x1))
            x1 = x2
            break

        # Подготовим переменные для следующей итерации
        x0, x1 = x1, x2

    return x1, iteration


if __name__ == "__main__":
    # Задаём отрезок [1, 1.5], где f'(1)*f'(1.5) < 0
    a, b = 1.0, 1.5
    eps = 0.0001

    x_star, n_iter = chord_method(a, b, eps=eps, max_iter=20)

    print(f"\nНайденное решение методом хорд: x* = {x_star:.6f} за {n_iter} итераций.")

    # Проверим f'(x*) и f(x*) для наглядности
    print(f"f'(x*) = {fprime(x_star):.6f}")
    print(f"f(x*)  = {f(x_star):.6f}")
